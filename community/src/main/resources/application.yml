# application.yml
server:
  port: 8081

spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 50MB
  mail:
    host: smtp.gmail.com
    port: 587
    username: springbank0625@gmail.com
    password: kmifvgcjnwatbfgk
    properties:
      mail:
        smtp:
          starttls:
            enable: true
          auth: true

  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: true

jwt:
  signing:
    key: 1920123119201231192012311920123112312321a

agora:
  id: c980d1cddfc548579e6503150f4d7005
  certificate: 84b8019b3cb64989ad1d402c77332cb3

rabbitmq:
  queue:
    name: queue
  exchange:
    name: exchange
  routing:
    key : key

management:
  server:
    port: 8040
  endpoints:
    web:
      exposure:
        include: "*"


---

# application-operation.yml : 운영 환경
server:
  url: https://beatmate.zapto.org
spring:
  rabbitmq:
    host: rabbit
    port: 5672
    username: guest
    password: guest
  config:
    activate:
      on-profile: operation
  jpa:
    hibernate:
      ddl-auto: validate
  datasource:
    url: jdbc:mysql://172.27.0.146:3306/myapp?useUnicode=true&characterEncoding=UTF-8
    username: root
    password: root
  data:
    redis:
      host: redis
      port: 6379

# 파일이 저장되는 위치
file:
  dir: /Users/woo/src/app/community/upload/image
# 인증 서버 url
authentication:
  server: http://authentication:8080/auth



---

# application-dev.yml : 도커 개발용 환경
server:
  url: http://localhost
spring:
  rabbitmq:
    host: rabbit
    port: 5672
    username: guest
    password: guest
  config:
    activate:
      on-profile: dev
  jpa:
    hibernate:
      ddl-auto: validate
  datasource:
    url: jdbc:mysql://mysql:3306/myapp?useUnicode=true&characterEncoding=UTF-8
    username: root
    password: root
  data:
    redis:
      host: redis
      port: 6379

file:
  dir: /Users/woo/src/app/community/upload/image


authentication:
  server: http://authentication:8080/auth

---


# application-local.dev.yml : 도커x 개발 환경
server:
  url: http://localhost:8081
spring:
  config:
    activate:
      on-profile: local-dev
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  jpa:
    hibernate:
      ddl-auto: create
  datasource:
    url: jdbc:mysql://localhost:3306/myapp1?useUnicode=true&characterEncoding=UTF-8
    username: root
    password: Opsueaxqx1578!
  data:
    redis:
      host: localhost
      port: 6379


file:
  dir: /Users/woo/Desktop/code/appdoc-Backend/authentication/upload/image


authentication:
  server: http://127.0.0.1:8080/auth

---

# application-test.yml : 테스트 환경
server:
  url: http://localhost:8081
spring:
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  config:
    activate:
      on-profile: test
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        use_sql_comments: true
  data:
    redis:
      host: localhost
      port: 6379


  datasource:
    url: jdbc:mysql://localhost:3306/myapp_test?useUnicode=true&characterEncoding=UTF-8
    username: root
    password: Opsueaxqx1578!

file:
  dir: /Users/woo/Desktop/code/appdoc-Backend/community/upload/image



authentication:
  server: http://127.0.0.1:8080/auth

